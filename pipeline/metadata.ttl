
@prefix foaf:   <http://xmlns.com/foaf/0.1/> .
@prefix rdfs:   <http://www.w3.org/2000/01/rdf-schema#> .
@prefix p-plan: <http://purl.org/net/p-plan#> .
@prefix prov:   <http://www.w3.org/ns/prov#> .
@prefix sds:    <https://w3id.org/sds#> .
@prefix dcat:   <https://www.w3.org/ns/dcat#> .
@prefix ex:     <http://example.org/>.
@prefix xsd:    <http://www.w3.org/2001/XMLSchema#>.
@prefix sh:     <http://www.w3.org/ns/shacl#>.
@prefix void:   <http://rdfs.org/ns/void#> .
@prefix ldes:   <https://w3id.org/ldes#>.
@prefix dct:    <http://purl.org/dc/terms/>.
@prefix stapi:  <https://w3id.org/stapi#> .
@prefix rdf:    <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix tree:   <https://w3id.org/tree#> .
@prefix geo:    <http://www.opengis.net/ont/geosparql#> .
@prefix time:   <http://www.w3.org/2006/time#> .
@prefix :       <http://example.org/> . 

ex:somePlan
    a            p-plan:Plan ;
    rdfs:comment "A plan to publish an LDES feed from Hamburg data" .

ex:HamburgObservationStream
    a                     sds:Stream ;
    p-plan:wasGeneratedBy [ a            p-plan:Activity ;
                            rdfs:comment "Load in Hamburg Observation data" ] ;
    sds:carries           [ a sds:Member ] ;
    sds:dataset           [ a                  dcat:Dataset ;
                            dcat:title         "LDES of Hamburg Observations" ;
                            dcat:publisher     <http://pod.rubendedecker.be/profile/card#me> ;
                            ldes:timestampPath stapi:phenomenonTime ;
                            dcat:identifier    <http://ldes-server:3000/hamburg> 
                          ] ;
    sds:shape             :ObservationShape;
    tree:shape            :ObservationShape.


#################################################################
# Single NodeShape: Observation
#################################################################
:ObservationShape
    a sh:NodeShape ;
    sh:targetClass stapi:Observation ;

    # sh:property [ sh:path stapi:phenomenonTime ] ;
    sh:property [ sh:path stapi:result ] ;
    sh:property [ sh:path stapi:resultTime ] ;
    sh:property [
        sh:path stapi:phenomenonTime ;
        sh:node [
            a sh:NodeShape ;
            sh:targetClass time:Interval ;

            # Beginning instant
            sh:property [
                sh:path time:hasBeginning ;
                sh:node [
                    a sh:NodeShape ;
                    sh:targetClass time:Instant ;
                    sh:property [
                        sh:path time:inXSDDateTimeStamp ;
                        sh:datatype xsd:dateTime ;
                    ]
                ] ;
            ] ;

            # End instant
            sh:property [
                sh:path time:hasEnd ;
                sh:node [
                    a sh:NodeShape ;
                    sh:targetClass time:Instant ;
                    sh:property [
                        sh:path time:inXSDDateTimeStamp ;
                        sh:datatype xsd:dateTime ;
                    ]
                ] ;
            ] ;

            # Optional duration
            sh:property [
                sh:path time:hasXSDDuration ;
                sh:datatype xsd:duration ;
                sh:maxCount 1 ;
            ] ;
        ] ;
        sh:minCount 1 ;
    ] ;

    #################################################################
    # Feature of Interest
    #################################################################


    sh:property [
        sh:path stapi:featureOfInterest ;
        sh:node [
            a sh:NodeShape ;
            sh:property [ sh:path stapi:description ] ;
            sh:property [ sh:path stapi:encodingType ] ;
            sh:property [ sh:path stapi:feature ] ;
            sh:property [ sh:path stapi:name ] ;
        ] ;
    ] ;

    #################################################################
    # Datastream
    #################################################################
    sh:property [
        sh:path stapi:datastream ;
        sh:node [
            a sh:NodeShape ;
            sh:property [ sh:path stapi:description ] ;
            sh:property [ sh:path stapi:name ] ;
            sh:property [ sh:path stapi:observationType ] ;
            sh:property [ sh:path stapi:observedArea ] ;
            sh:property [ sh:path stapi:phenomenonTime ] ;
            sh:property [ sh:path stapi:properties ] ;
            sh:property [ sh:path stapi:resultTime ] ;
            sh:property [ sh:path stapi:unitOfMeasurement ] ;

            #################################################################
            # Observed Property
            #################################################################

            sh:property [
                sh:path stapi:observedProperty ;
                sh:node [
                    a sh:NodeShape ;
                    sh:property [ sh:path stapi:definition ] ;
                    sh:property [ sh:path stapi:description ] ;
                    sh:property [ sh:path stapi:name ] ;
                ] ;
            ] ;
            
            #################################################################
            # Sensor
            #################################################################

            sh:property [
                sh:path stapi:sensor ;
                sh:node [
                    a sh:NodeShape ;
                    sh:property [ sh:path stapi:description ] ;
                    sh:property [ sh:path stapi:encodingType ] ;
                    sh:property [ sh:path stapi:metadata ] ;
                    sh:property [ sh:path stapi:name ] ;
                ] ;
            ] ;

            #################################################################
            # Thing
            #################################################################

            sh:property [
                sh:path stapi:thing ;
                sh:node [
                    a sh:NodeShape ;
                    sh:property [ sh:path stapi:description ] ;
                    sh:property [ sh:path stapi:name ] ;
                    sh:property [ sh:path stapi:properties ] ;
                    sh:property [
                        sh:path stapi:locations ;
                        sh:node [
                            a sh:NodeShape ;
                            sh:property [
                                sh:path geo:hasGeometry ;
                                sh:node [
                                    a sh:NodeShape ;
                                ] ;
                            ] ;
                            
                        ] ;
                    ] ;
                ] ;
            ] ;
        ] ;
    ] .
